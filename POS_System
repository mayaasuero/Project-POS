import java.util.Scanner;
public class POS_System{
	private String[] storage = new String[50];
	private int last_Empty_Storage;
	private String[] cart = new String[15];
	private int last_Empty_Cart;
	Scanner input = new Scanner(System.in);
	
	public void ProdInfo(){
		this.last_Empty_Storage = 0;
		this.last_Empty_Cart = 0;
	}
	
	public void Add_Product(String search){
		int i = 0;
		boolean found = false;
		int flag = 0;
		int counter = 0;
		if(last_Empty_Storage == 0){
			System.out.print("Name: ");
			String name = input.nextLine();
			
			System.out.print("Price: ");
			float price = input.nextFloat();
			
			System.out.print("Size: ");
			int size = input.nextInt();
				
			System.out.print("Quantity: ");
			int quantity = input.nextInt();
				
			this.storage[this.last_Empty_Storage] = new Product(name, price, size, quantity);
			this.last_Empty_Storage++;
		}
		else{
			while(i < this.last_Empty_Storage){
				if(searchequalsIgnoreCase(this.storage[i].name.)){
					counter++;
					System.out.print("["+i+"] - " + this.storage[i].name + " " + this.storage[i].size+ " " +this.storage[i].price);
					found = true;
				}
				i++;
			}
		
			if(!found){
				if(i < this.last_Empty_Storage){
					System.out.print("Name: ");
					String name = input.nextLine();
					
					System.out.print("Price: ");
					int price = input.nextInt();
					
					System.out.print("Size: ");
					int size = input.nextInt();
					
					System.out.print("Quantity: ");
					int quantity = input.nextInt();
					
					this.storage[this.last_Empty_Storage] = new Product(name, price, size, quantity);
					this.last_Empty_Storage++;
				}
				else{
					System.out.println("Storage is full. Cannot add new item.");
				}
			}
			else{
				System.out.print("Select item: (Enter number as listed)");
				int selection = input.nextInt();
				flag = selection;
				
				System.out.print("Quantity to add");
				int add = input.nextInt();
				this.storage[flag].Add_Quantity(add);
			}
		}
		
	//	System.out.println("Add more products? (Yes/No)");
	//	String answer = input.nextString();				
	//		if(answer == "Yes"){
	//			Add_Product(search);
	//		}
		//exit or end
	}
	
	public void Sale(String search){
		boolean found = false;
		int flag = 0;
		int i = 0;
		int j = 0;
		while(i < this.last_Empty_Storage){
			if(this.storage[i].name.equalsIgnoreCase(search)){
				System.out.print("["+i+"] - "+this.storage[i].name + " " + this.storage[i].size+ " " +this.storage[i].price);
				found = true;
			}
			i++;
		}
		if(!found){
			System.out.println("Product not found.");
			//do another search
		}
		
		else if (found && this.last_Empty_Cart < this.cart.length) {
			System.out.print("Select item: (Enter number as listed)");
			int flag = input.nextInt();
			
			System.out.print("Quantity: ");
			int quant = input.nextInt();
			this.storage[flag].subt(quant);
			
			this.cart[last_Empty_Cart] = new Cart_item();
			this.cart[last_Empty_Cart].set_Name = this.storage[flag].get_Name;
			this.cart[last_Empty_Cart].set_Quantity = quant;
			//same goes to other attributes
			
			this.last_Empty_Cart++;
			//how do you create transfers or copies of objects without pass by reference
		}
		
		else{
			System.out.println("Your cart is full. Please check out first.");
		}
		//if found
		//add to cart
		//calculate total
		//deduct to inventory
		//question - add another item? (do another search)
		//if not, enter rendered amount; calculate for change
		//confirm sale
		//exit (Y - end program; N - back to main menu)
	}
	
	public void Inventory(){
		int i = 0;
		while(i < this.storage.length()){
			System.out.println(this.storage[i].name() + " " +this.storage[i].price() + " " + this.storage[i].quantity() + " " + this.storage[i].color());
			//format: name / price / quantity / color)
			i++;
		}
		//or end program
	}
	
	public void SalesReport(){
		//calculate total units per product sold
		//calculate total sales for certain product
		//total sales every day
		//System.out.println(this.prodName.name() + " " + this.prodName.color());
		
		//exit or end
	}
}
